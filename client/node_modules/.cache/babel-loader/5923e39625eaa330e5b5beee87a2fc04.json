{"ast":null,"code":"var _jsxFileName = \"/Users/ryanrudzitis/Projects/mycoBC/client/src/components/recordList.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Card } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap'; // function showMushroomInfo(props) {\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => /*#__PURE__*/_jsxDEV(Card, {\n  style: {\n    width: '18rem'\n  },\n  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n    variant: \"top\",\n    src: \"holder.js/100px180\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: props.record.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n      children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: () => console.log(props.record.binomial),\n      children: \"Learn more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = Record;\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = {\n      records: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/record/\").then(response => {\n      this.setState({\n        records: response.data\n      }); // console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a record based on the method\n\n\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      console.log('hello');\n      console.log(this.state.records);\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.recordList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/Users/ryanrudzitis/Projects/mycoBC/client/src/components/recordList.js"],"names":["React","Component","axios","Link","Card","Button","Record","props","width","record","name","console","log","binomial","RecordList","constructor","deleteRecord","bind","state","records","componentDidMount","get","then","response","setState","data","catch","error","id","delete","filter","el","_id","recordList","map","currentrecord","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Card } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\n// function showMushroomInfo(props) {\n  \n// }\n\nconst Record = (props) => (\n  <Card style={{ width: '18rem' }}>\n    <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n    <Card.Body>\n      <Card.Title>{props.record.name}</Card.Title>\n      <Card.Text>\n        Some quick example text to build on the card title and make up the bulk of\n        the card's content.\n      </Card.Text>\n      <Button variant=\"primary\" onClick={ () => console.log(props.record.binomial)}>Learn more</Button>\n    </Card.Body>\n  </Card>\n);\n\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [] };\n  }\n\n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n        // console.log(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n\n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      console.log('hello');\n      console.log(this.state.records);\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n      <div>\n        {/* <h3>Mushrooms!</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Binomial</th>\n              <th>Edible</th>\n              <th>Poisonous</th>\n              <th>Availability</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n        <Card style={{ width: '18rem' }}>\n          <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n          <Card.Body>\n            <Card.Title>Card Title</Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the bulk of\n              the card's content.\n            </Card.Text>\n            <Button variant=\"primary\">Go somewhere</Button>\n          </Card.Body>\n        </Card> */}\n        {this.recordList()}\n      </div>\n\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}