{"ast":null,"code":"var _jsxFileName = \"/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { usePopup, DialogType } from \"react-custom-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MushroomInfo = props => {\n  _s();\n\n  const {\n    showAlert\n  } = usePopup();\n\n  const buttonPressed = () => {\n    let infoText = \"\";\n    infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n    infoText += \"Edible: \" + props.record.edible + \"\\n\";\n    infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n    infoText += \"Availability \" + props.record.availability;\n    console.log(infoText); // show modal here \n    // showAlert({\n    //     title: props.record.name,\n    //     type: DialogType.INFO,\n    //     text: infoText\n    // });\n  }; //return modal?\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: buttonPressed,\n      children: \"Learn more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: this.state.isOpen,\n      onHide: this.closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: this.closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MushroomInfo, \"9TR2xG0CRi9cqKqxWRj9FZ/sHcQ=\", false, function () {\n  return [usePopup];\n});\n\n_c = MushroomInfo;\nexport default MushroomInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MushroomInfo\");","map":{"version":3,"sources":["/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js"],"names":["Button","Modal","usePopup","DialogType","MushroomInfo","props","showAlert","buttonPressed","infoText","record","binomial","edible","poisonous","availability","console","log","state","isOpen","closeModal"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,QAAQ,EAA9B;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1B,QAAIC,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,IAAI,eAAeH,KAAK,CAACI,MAAN,CAAaC,QAA5B,GAAuC,IAAnD;AACAF,IAAAA,QAAQ,IAAI,aAAaH,KAAK,CAACI,MAAN,CAAaE,MAA1B,GAAmC,IAA/C;AACAH,IAAAA,QAAQ,IAAI,gBAAgBH,KAAK,CAACI,MAAN,CAAaG,SAA7B,GAAyC,IAArD;AACAJ,IAAAA,QAAQ,IAAI,kBAAkBH,KAAK,CAACI,MAAN,CAAaI,YAA3C;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAR0B,CAU1B;AACA;AACA;AACA;AACA;AACA;AAED,GAjBD,CAJ8B,CAuB9B;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAED,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKS,KAAL,CAAWC,MAAxB;AAAgC,MAAA,MAAM,EAAE,KAAKC,UAA7C;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAE,KAAKA,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAiBD,CAzCD;;GAAMd,Y;UAEkBF,Q;;;KAFlBE,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import { Button } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { usePopup, DialogType } from \"react-custom-popup\";\n\n\nconst MushroomInfo = (props) => {\n\n  const { showAlert } = usePopup();\n\n  const buttonPressed = () => {\n    let infoText = \"\";\n    infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n    infoText += \"Edible: \" + props.record.edible + \"\\n\";\n    infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n    infoText += \"Availability \" + props.record.availability;\n\n\n    console.log(infoText);\n\n    // show modal here \n    // showAlert({\n    //     title: props.record.name,\n    //     type: DialogType.INFO,\n    //     text: infoText\n    // });\n\n  }\n\n  //return modal?\n  return (\n    <>\n      <Button variant=\"primary\" onClick={buttonPressed}>Learn more</Button>\n\n      <Modal show={this.state.isOpen} onHide={this.closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default MushroomInfo;"]},"metadata":{},"sourceType":"module"}