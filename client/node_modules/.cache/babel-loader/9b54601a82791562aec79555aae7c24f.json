{"ast":null,"code":"var _jsxFileName = \"/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js\";\nimport { Button, Modal } from 'react-bootstrap';\nimport React, { useState } from \"react\";\nimport { usePopup, DialogType } from \"react-custom-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MushroomInfo(props) {\n  // const { showAlert } = usePopup();\n  const buttonPressed = () => {\n    let infoText = \"\";\n    infoText += props.record.name + \"\\n\\n\";\n    infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n    infoText += \"Edible: \" + props.record.edible + \"\\n\";\n    infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n    infoText += \"Availability \" + props.record.availability;\n    console.log(infoText);\n    alert(infoText);\n  }; //return modal?\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: buttonPressed,\n      children: \"Learn more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = MushroomInfo;\nexport default MushroomInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MushroomInfo\");","map":{"version":3,"sources":["/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js"],"names":["Button","Modal","React","useState","usePopup","DialogType","MushroomInfo","props","buttonPressed","infoText","record","name","binomial","edible","poisonous","availability","console","log","alert"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAG3B;AAEA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIC,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,IAAIF,KAAK,CAACG,MAAN,CAAaC,IAAb,GAAoB,MAAhC;AACAF,IAAAA,QAAQ,IAAI,eAAeF,KAAK,CAACG,MAAN,CAAaE,QAA5B,GAAuC,IAAnD;AACAH,IAAAA,QAAQ,IAAI,aAAaF,KAAK,CAACG,MAAN,CAAaG,MAA1B,GAAmC,IAA/C;AACAJ,IAAAA,QAAQ,IAAI,gBAAgBF,KAAK,CAACG,MAAN,CAAaI,SAA7B,GAAyC,IAArD;AACAL,IAAAA,QAAQ,IAAI,kBAAkBF,KAAK,CAACG,MAAN,CAAaK,YAA3C;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAS,IAAAA,KAAK,CAACT,QAAD,CAAL;AACD,GAXD,CAL2B,CAkB3B;;;AACA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAED,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;KAxBQF,Y;AAyBT,eAAeA,YAAf","sourcesContent":["import { Button, Modal } from 'react-bootstrap';\nimport React, { useState } from \"react\";\nimport { usePopup, DialogType } from \"react-custom-popup\";\n\n\nfunction MushroomInfo(props) {\n\n\n  // const { showAlert } = usePopup();\n\n  const buttonPressed = () => {\n    let infoText = \"\";\n    infoText += props.record.name + \"\\n\\n\";\n    infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n    infoText += \"Edible: \" + props.record.edible + \"\\n\";\n    infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n    infoText += \"Availability \" + props.record.availability;\n\n\n    console.log(infoText);\n    alert(infoText);\n  }\n\n  //return modal?\n  return (\n    <>\n      <Button variant=\"primary\" onClick={buttonPressed}>Learn more</Button>\n    </>\n  );\n}\nexport default MushroomInfo;"]},"metadata":{},"sourceType":"module"}