{"ast":null,"code":"var _jsxFileName = \"/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { usePopup, DialogType } from \"react-custom-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MushroomInfo = props => {\n  _s();\n\n  let infoText = \"\";\n  infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n  infoText += \"Edible: \" + props.record.edible + \"\\n\";\n  infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n  infoText += \"Availability \" + props.record.availability;\n  console.log(infoText);\n  const {\n    showAlert\n  } = usePopup();\n\n  const buttonPressed = () => {// show modal here \n    // showAlert({\n    //     title: props.record.name,\n    //     type: DialogType.INFO,\n    //     text: infoText\n    // });\n  }; //return modal?\n\n\n  return (\n    /*#__PURE__*/\n    // <Button variant=\"primary\" onClick={buttonPressed}>Learn more</Button>\n    _jsxDEV(Modal.Dialog, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal body text goes here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MushroomInfo, \"9TR2xG0CRi9cqKqxWRj9FZ/sHcQ=\", false, function () {\n  return [usePopup];\n});\n\n_c = MushroomInfo;\nexport default MushroomInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MushroomInfo\");","map":{"version":3,"sources":["/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js"],"names":["Button","Modal","usePopup","DialogType","MushroomInfo","props","infoText","record","binomial","edible","poisonous","availability","console","log","showAlert","buttonPressed"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B,MAAIC,QAAQ,GAAG,EAAf;AACAA,EAAAA,QAAQ,IAAI,eAAeD,KAAK,CAACE,MAAN,CAAaC,QAA5B,GAAuC,IAAnD;AACAF,EAAAA,QAAQ,IAAI,aAAaD,KAAK,CAACE,MAAN,CAAaE,MAA1B,GAAmC,IAA/C;AACAH,EAAAA,QAAQ,IAAI,gBAAgBD,KAAK,CAACE,MAAN,CAAaG,SAA7B,GAAyC,IAArD;AACAJ,EAAAA,QAAQ,IAAI,kBAAkBD,KAAK,CAACE,MAAN,CAAaI,YAA3C;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AAGA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBZ,QAAQ,EAA9B;;AAEA,QAAMa,aAAa,GAAG,MAAM,CAE1B;AACA;AACA;AACA;AACA;AACA;AAED,GATD,CAd8B,CAyB9B;;;AACA;AAAA;AACE;AACA,YAAC,KAAD,CAAO,MAAP;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAiBD,CA3CD;;GAAMX,Y;UAYkBF,Q;;;KAZlBE,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import { Button } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { usePopup, DialogType } from \"react-custom-popup\";\n\n\nconst MushroomInfo = (props) => {\n\n  let infoText = \"\";\n  infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n  infoText += \"Edible: \" + props.record.edible + \"\\n\";\n  infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n  infoText += \"Availability \" + props.record.availability;\n\n\n  console.log(infoText);\n\n\n  const { showAlert } = usePopup();\n\n  const buttonPressed = () => {\n\n    // show modal here \n    // showAlert({\n    //     title: props.record.name,\n    //     type: DialogType.INFO,\n    //     text: infoText\n    // });\n\n  }\n\n  //return modal?\n  return (\n    // <Button variant=\"primary\" onClick={buttonPressed}>Learn more</Button>\n    <Modal.Dialog>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal title</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>Modal body text goes here.</p>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"secondary\">Close</Button>\n        <Button variant=\"primary\">Save changes</Button>\n      </Modal.Footer>\n    </Modal.Dialog>\n  );\n}\nexport default MushroomInfo;"]},"metadata":{},"sourceType":"module"}