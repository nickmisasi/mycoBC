{"ast":null,"code":"var _jsxFileName = \"/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js\";\nimport { Button, Modal } from 'react-bootstrap';\nimport React, { useState } from \"react\";\nimport { usePopup, DialogType } from \"react-custom-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MushroomInfo(props) {\n  // const { showAlert } = usePopup();\n  const buttonPressed = () => {\n    let infoText = \"\";\n    infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n    infoText += \"Edible: \" + props.record.edible + \"\\n\";\n    infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n    infoText += \"Availability \" + props.record.availability;\n    console.log(infoText);\n    alert(\"hello\"); // show modal here \n    // showAlert({\n    //     title: props.record.name,\n    //     type: DialogType.INFO,\n    //     text: infoText\n    // });\n  }; //return modal?\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: buttonPressed,\n      children: \"Learn more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal body text goes here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Edible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Poison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = MushroomInfo;\nexport default MushroomInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MushroomInfo\");","map":{"version":3,"sources":["/Users/ryanrudzitis/Projects/mycoBC/client/src/components/mushroomInfo.js"],"names":["Button","Modal","React","useState","usePopup","DialogType","MushroomInfo","props","buttonPressed","infoText","record","binomial","edible","poisonous","availability","console","log","alert"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAG3B;AAEA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIC,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,IAAI,eAAeF,KAAK,CAACG,MAAN,CAAaC,QAA5B,GAAuC,IAAnD;AACAF,IAAAA,QAAQ,IAAI,aAAaF,KAAK,CAACG,MAAN,CAAaE,MAA1B,GAAmC,IAA/C;AACAH,IAAAA,QAAQ,IAAI,gBAAgBF,KAAK,CAACG,MAAN,CAAaG,SAA7B,GAAyC,IAArD;AACAJ,IAAAA,QAAQ,IAAI,kBAAkBF,KAAK,CAACG,MAAN,CAAaI,YAA3C;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAQ,IAAAA,KAAK,CAAC,OAAD,CAAL,CAT0B,CAW1B;AACA;AACA;AACA;AACA;AACA;AAED,GAlBD,CAL2B,CAyB3B;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAET,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAWE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqBD;;KA/CQF,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import { Button, Modal } from 'react-bootstrap';\nimport React, { useState } from \"react\";\nimport { usePopup, DialogType } from \"react-custom-popup\";\n\n\nfunction MushroomInfo(props) {\n\n\n  // const { showAlert } = usePopup();\n\n  const buttonPressed = () => {\n    let infoText = \"\";\n    infoText += \"Binomial: \" + props.record.binomial + \"\\n\";\n    infoText += \"Edible: \" + props.record.edible + \"\\n\";\n    infoText += \"Poisonous: \" + props.record.poisonous + \"\\n\";\n    infoText += \"Availability \" + props.record.availability;\n\n\n    console.log(infoText);\n    alert(\"hello\");\n\n    // show modal here \n    // showAlert({\n    //     title: props.record.name,\n    //     type: DialogType.INFO,\n    //     text: infoText\n    // });\n\n  }\n\n  //return modal?\n  return (\n    <>\n      <Button variant=\"primary\" onClick={buttonPressed}>Learn more</Button>\n      <Modal.Dialog>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal title</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p>Modal body text goes here.</p>\n          <p>Edible</p>\n          <p>Poison</p>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\">Close</Button>\n          <Button variant=\"primary\">Save changes</Button>\n        </Modal.Footer>\n      </Modal.Dialog>\n    </>\n  );\n}\nexport default MushroomInfo;"]},"metadata":{},"sourceType":"module"}